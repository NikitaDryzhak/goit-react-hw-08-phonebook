{"version":3,"file":"static/js/12.ba0fc755.chunk.js","mappings":"sQACA,K,SCKe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAtE,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgCC,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAAiBA,UAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACdP,GAAU,kBAAKD,GAAN,cAAeH,EAAOW,MANF,wCAS/B,WAA4BF,GAA5B,kFACEA,EAAEG,iBADJ,SAGyBN,EAAOH,GAHhC,OAIE,QADMU,EAHR,cAIE,IAAIA,GAAJ,UAAIA,EAAUC,YAAd,OAAI,EAAgBC,OAClBC,QAAQC,IAAR,OAAYJ,QAAZ,IAAYA,GAAZ,UAAYA,EAAUC,YAAtB,aAAY,EAAgBC,OAC5BG,EAAAA,OAAAA,QAAA,mBACAC,MAEAD,EAAAA,OAAAA,QAAA,iCACAd,GAAU,kBAAKD,GAAN,IAAcD,SAAU,OAVrC,4CAT+B,sBAuB/B,IAAMiB,EAAQ,WACZf,EAAU,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAE7C,OACE,kBAAMkB,SA3BuB,4CA2B7B,WACE,iDACA,4BACE,qCAEE,kBACEC,KAAK,OACLrB,KAAK,OACLW,MAAOR,EAAOH,KACdsB,SAAUd,EACVe,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,sCAEE,kBACEJ,KAAK,QACLrB,KAAK,QACLW,MAAOR,EAAOF,MACdqB,SAAUd,EACViB,UAAQ,QAGZ,yCAEE,kBACEJ,KAAK,WACLrB,KAAK,WACLW,MAAOR,EAAOD,SACdoB,SAAUd,EACVe,QAAQ,QACRC,MAAM,kCACNC,UAAQ,QAGZ,mBAAQJ,KAAK,SAASK,UAAWC,EAAAA,aAAgBC,SAAUrB,EAA3D,SACGA,EAAY,aAAe","sources":["pages/SignUp/SignUp.module.css","pages/SignUp/SignUp.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react';\nimport { useSignUpMutation } from 'redux/services';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport s from './SignUp.module.css';\n\nexport default function SignUp() {\n  const [params, setParams] = useState({ name: '', email: '', password: '' });\n  const [signUp, { isLoading }] = useSignUpMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setParams({ ...params, [name]: value });\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    const response = await signUp(params);\n    if (response?.data?.token) {\n      console.log(response?.data?.token);\n      Notify.success(`Sign up success`);\n      reset();\n    } else {\n      Notify.warning(`Check your info and try again`);\n      setParams({ ...params, password: '' });\n    }\n  }\n\n  const reset = () => {\n    setParams({ name: '', email: '', password: '' });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Create your account</h1>\n      <div>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={params.name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={params.email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={params.password}\n            onChange={handleChange}\n            pattern=\".{7,}\"\n            title=\"At least 7 characters in length\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.submitButton} disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Accept'}\n        </button>\n      </div>\n    </form>\n  );\n}\n"],"names":["SignUp","useState","name","email","password","params","setParams","useSignUpMutation","signUp","isLoading","handleChange","e","currentTarget","value","preventDefault","response","data","token","console","log","Notify","reset","onSubmit","type","onChange","pattern","title","required","className","s","disabled"],"sourceRoot":""}